stages:
  - test
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  VENV_PATH: ".venv"
  IMAGE_TAG_LATEST: "$DOCKER_REGISTRY:latest"
  IMAGE_TAG_COMMIT: "$DOCKER_REGISTRY:$CI_COMMIT_SHORT_SHA"

cache:
  paths:
    - .venv/

before_script:
  - python3 -m venv $VENV_PATH
  - source $VENV_PATH/bin/activate
  - pip install -U pip build twine

test:
  tags:
    - shell
  stage: test
  script:
    - pip install .[test]
    - pytest

build_package:
  tags:
    - shell
  stage: build
  script:
    - rm -rf dist/
    - python -m build
  artifacts:
    paths:
      - dist/*.tar.gz
      - dist/*.whl

publish_pypi:
  tags:
    - shell
  stage: deploy
  needs: ["build_package"]
  script:
    - |
      if [ "$CI_COMMIT_BRANCH" = "main" ]; then
        twine upload -u __token__ -P "$PYPI_TOKEN" --repository-url https://upload.pypi.org/legacy/ dist/*
      elif [ "$CI_COMMIT_BRANCH" = "dev" ]; then
        twine upload -u __token__ -P "$PYPI_TEST_TOKEN" --repository-url https://test.pypi.org/legacy/ dist/*
      fi
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && $CI_COMMIT_TAG'
      when: always
    - if: '$CI_COMMIT_BRANCH == "dev"'
      when: always
    - when: never

docker_build_push:
  tags:
    - docker
  stage: deploy
  needs: ["build_package"]
  image: docker:24.0.2
  services:
    - docker:24.0.2-dind
  variables:
    DOCKER_BUILDKIT: 1
  script:
    - docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_TOKEN" "$DOCKER_REGISTRY"
    - docker buildx create --use
    - docker buildx build --push --tag $IMAGE_TAG_LATEST --tag $IMAGE_TAG_COMMIT -f docker/Dockerfile .
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && $CI_COMMIT_TAG'
      when: always
    - if: '$CI_COMMIT_BRANCH == "dev"'
      when: always
    - when: never
